"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRegionInfo = void 0;
const getResolvedHostname_1 = require("./getResolvedHostname");
const getResolvedPartition_1 = require("./getResolvedPartition");
const getResolvedSigningRegion_1 = require("./getResolvedSigningRegion");
const getRegionInfo = (region, { signingService, regionHash, partitionHash }) => {
    var _a, _b, _c, _d, _e, _f;
    const partition = getResolvedPartition_1.getResolvedPartition(region, { partitionHash });
    const resolvedRegion = (_b = (_a = partitionHash[partition]) === null || _a === void 0 ? void 0 : _a.endpoint) !== null && _b !== void 0 ? _b : region;
    const hostname = getResolvedHostname_1.getResolvedHostname(resolvedRegion, {
        signingService,
        regionHostname: (_c = regionHash[resolvedRegion]) === null || _c === void 0 ? void 0 : _c.hostname,
        partitionHostname: (_d = partitionHash[partition]) === null || _d === void 0 ? void 0 : _d.hostname,
    });
    const signingRegion = getResolvedSigningRegion_1.getResolvedSigningRegion(region, {
        hostname,
        signingRegion: (_e = regionHash[resolvedRegion]) === null || _e === void 0 ? void 0 : _e.signingRegion,
        regionRegex: partitionHash[partition].regionRegex,
    });
    return {
        partition,
        signingService,
        hostname,
        ...(signingRegion && { signingRegion }),
        ...(((_f = regionHash[resolvedRegion]) === null || _f === void 0 ? void 0 : _f.signingService) && {
            signingService: regionHash[resolvedRegion].signingService,
        }),
    };
};
exports.getRegionInfo = getRegionInfo;
